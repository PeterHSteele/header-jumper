Searching 25 files for "header_jumper"

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/header-jumper.php:
   11   * @link              http://example.com
   12   * @since             1.0.0
   13:  * @package           Header_Jumper
   14   *
   15   * @wordpress-plugin
   ..
   36   * Rename this for your plugin and update it as you release new versions.
   37   */
   38: define( 'HEADER_JUMPER_VERSION', '1.0.0' );
   39  
   40  /**
   ..
   42   * This action is documented in includes/class-header-jumper-activator.php
   43   */
   44: function activate_header_jumper() {
   45  	require_once plugin_dir_path( __FILE__ ) . 'includes/class-header-jumper-activator.php';
   46: 	Header_Jumper_Activator::activate();
   47  }
   48  
   ..
   51   * This action is documented in includes/class-header-jumper-deactivator.php
   52   */
   53: function deactivate_header_jumper() {
   54  	require_once plugin_dir_path( __FILE__ ) . 'includes/class-header-jumper-deactivator.php';
   55: 	Header_Jumper_Deactivator::deactivate();
   56  }
   57  
   58: register_activation_hook( __FILE__, 'activate_header_jumper' );
   59: register_deactivation_hook( __FILE__, 'deactivate_header_jumper' );
   60  
   61  /**
   ..
   74   * @since    1.0.0
   75   */
   76: function run_header_jumper() {
   77  
   78: 	$plugin = new Header_Jumper();
   79  	$plugin->run();
   80  
   81  }
   82: run_header_jumper();
   83  

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/README.md:
   25  
   26  * rename files from `header-jumper` to `example-me`
   27: * change `header_jumper` to `example_me`
   28  * change `header-jumper` to `example-me`
   29: * change `Header_Jumper` to `Example_Me`
   30: * change `HEADER_JUMPER_` to `EXAMPLE_ME_`
   31  
   32  It's safe to activate the plugin at this point. Because the Boilerplate has no real functionality there will be no menu items, meta boxes, or custom post types added until you write the code.
   ..
   76  * `header-jumper/public` is for all public-facing functionality
   77  
   78: Note that previous versions of the Boilerplate did not include `Header_Jumper_Loader` but this class is used to register all filters and actions with WordPress.
   79  
   80  The example code provided shows how to register your hooks with the Loader class.

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/README.txt:
   46  1. Upload `header-jumper.php` to the `/wp-content/plugins/` directory
   47  1. Activate the plugin through the 'Plugins' menu in WordPress
   48: 1. Place `<?php do_action('header_jumper_hook'); ?>` in your templates
   49  
   50  == Frequently Asked Questions ==

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/uninstall.php:
   23   * @since      1.0.0
   24   *
   25:  * @package    Header_Jumper
   26   */
   27  

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/admin/class-header-jumper-admin.php:
    7   * @since      1.0.0
    8   *
    9:  * @package    Header_Jumper
   10:  * @subpackage Header_Jumper/admin
   11   */
   12  
   ..
   17   * enqueue the admin-specific stylesheet and JavaScript.
   18   *
   19:  * @package    Header_Jumper
   20:  * @subpackage Header_Jumper/admin
   21   * @author     Your Name <email@example.com>
   22   */
   23: class Header_Jumper_Admin {
   24  
   25  	/**
   ..
   28  	 * @since    1.0.0
   29  	 * @access   private
   30: 	 * @var      string    $header_jumper    The ID of this plugin.
   31  	 */
   32: 	private $header_jumper;
   33  
   34  	/**
   ..
   45  	 *
   46  	 * @since    1.0.0
   47: 	 * @param      string    $header_jumper       The name of this plugin.
   48  	 * @param      string    $version    The version of this plugin.
   49  	 */
   50: 	public function __construct( $header_jumper, $version ) {
   51  
   52: 		$this->header_jumper = $header_jumper;
   53  		$this->version = $version;
   54  
   ..
   66  		 *
   67  		 * An instance of this class should be passed to the run() function
   68: 		 * defined in Header_Jumper_Loader as all of the hooks are defined
   69  		 * in that particular class.
   70  		 *
   71: 		 * The Header_Jumper_Loader will then create the relationship
   72  		 * between the defined hooks and the functions defined in this
   73  		 * class.
   74  		 */
   75  
   76: 		wp_enqueue_style( $this->header_jumper, plugin_dir_url( __FILE__ ) . 'css/header-jumper-admin.css', array(), $this->version, 'all' );
   77  
   78  	}
   ..
   89  		 *
   90  		 * An instance of this class should be passed to the run() function
   91: 		 * defined in Header_Jumper_Loader as all of the hooks are defined
   92  		 * in that particular class.
   93  		 *
   94: 		 * The Header_Jumper_Loader will then create the relationship
   95  		 * between the defined hooks and the functions defined in this
   96  		 * class.
   97  		 */
   98  
   99: 		wp_enqueue_script( $this->header_jumper, plugin_dir_url( __FILE__ ) . 'js/header-jumper-admin.js', array( 'jquery' ), $this->version, false );
  100  
  101  	}

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/admin/partials/header-jumper-admin-display.php:
    9   * @since      1.0.0
   10   *
   11:  * @package    Header_Jumper
   12:  * @subpackage Header_Jumper/admin/partials
   13   */
   14  ?>

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/includes/class-header-jumper-activator.php:
    7   * @since      1.0.0
    8   *
    9:  * @package    Header_Jumper
   10:  * @subpackage Header_Jumper/includes
   11   */
   12  
   ..
   17   *
   18   * @since      1.0.0
   19:  * @package    Header_Jumper
   20:  * @subpackage Header_Jumper/includes
   21   * @author     Your Name <email@example.com>
   22   */
   23: class Header_Jumper_Activator {
   24  
   25  	/**

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/includes/class-header-jumper-deactivator.php:
    7   * @since      1.0.0
    8   *
    9:  * @package    Header_Jumper
   10:  * @subpackage Header_Jumper/includes
   11   */
   12  
   ..
   17   *
   18   * @since      1.0.0
   19:  * @package    Header_Jumper
   20:  * @subpackage Header_Jumper/includes
   21   * @author     Your Name <email@example.com>
   22   */
   23: class Header_Jumper_Deactivator {
   24  
   25  	/**

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/includes/class-header-jumper-i18n.php:
   10   * @since      1.0.0
   11   *
   12:  * @package    Header_Jumper
   13:  * @subpackage Header_Jumper/includes
   14   */
   15  
   ..
   21   *
   22   * @since      1.0.0
   23:  * @package    Header_Jumper
   24:  * @subpackage Header_Jumper/includes
   25   * @author     Your Name <email@example.com>
   26   */
   27: class Header_Jumper_i18n {
   28  
   29  

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/includes/class-header-jumper-loader.php:
    7   * @since      1.0.0
    8   *
    9:  * @package    Header_Jumper
   10:  * @subpackage Header_Jumper/includes
   11   */
   12  
   ..
   18   * run function to execute the list of actions and filters.
   19   *
   20:  * @package    Header_Jumper
   21:  * @subpackage Header_Jumper/includes
   22   * @author     Your Name <email@example.com>
   23   */
   24: class Header_Jumper_Loader {
   25  
   26  	/**

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/includes/class-header-jumper.php:
   10   * @since      1.0.0
   11   *
   12:  * @package    Header_Jumper
   13:  * @subpackage Header_Jumper/includes
   14   */
   15  
   ..
   24   *
   25   * @since      1.0.0
   26:  * @package    Header_Jumper
   27:  * @subpackage Header_Jumper/includes
   28   * @author     Your Name <email@example.com>
   29   */
   30: class Header_Jumper {
   31  
   32  	/**
   ..
   36  	 * @since    1.0.0
   37  	 * @access   protected
   38: 	 * @var      Header_Jumper_Loader    $loader    Maintains and registers all hooks for the plugin.
   39  	 */
   40  	protected $loader;
   ..
   45  	 * @since    1.0.0
   46  	 * @access   protected
   47: 	 * @var      string    $header_jumper    The string used to uniquely identify this plugin.
   48  	 */
   49: 	protected $header_jumper;
   50  
   51  	/**
   ..
   68  	 */
   69  	public function __construct() {
   70: 		if ( defined( 'HEADER_JUMPER_VERSION' ) ) {
   71: 			$this->version = HEADER_JUMPER_VERSION;
   72  		} else {
   73  			$this->version = '1.0.0';
   74  		}
   75: 		$this->header_jumper = 'header-jumper';
   76  
   77  		$this->load_dependencies();
   ..
   87  	 * Include the following files that make up the plugin:
   88  	 *
   89: 	 * - Header_Jumper_Loader. Orchestrates the hooks of the plugin.
   90: 	 * - Header_Jumper_i18n. Defines internationalization functionality.
   91: 	 * - Header_Jumper_Admin. Defines all hooks for the admin area.
   92: 	 * - Header_Jumper_Public. Defines all hooks for the public side of the site.
   93  	 *
   94  	 * Create an instance of the loader which will be used to register the hooks
   ..
  123  		require_once plugin_dir_path( dirname( __FILE__ ) ) . 'public/class-header-jumper-public.php';
  124  
  125: 		$this->loader = new Header_Jumper_Loader();
  126  
  127  	}
  ...
  130  	 * Define the locale for this plugin for internationalization.
  131  	 *
  132: 	 * Uses the Header_Jumper_i18n class in order to set the domain and to register the hook
  133  	 * with WordPress.
  134  	 *
  ...
  138  	private function set_locale() {
  139  
  140: 		$plugin_i18n = new Header_Jumper_i18n();
  141  
  142  		$this->loader->add_action( 'plugins_loaded', $plugin_i18n, 'load_plugin_textdomain' );
  ...
  153  	private function define_admin_hooks() {
  154  
  155: 		$plugin_admin = new Header_Jumper_Admin( $this->get_header_jumper(), $this->get_version() );
  156  
  157  		$this->loader->add_action( 'admin_enqueue_scripts', $plugin_admin, 'enqueue_styles' );
  ...
  169  	private function define_public_hooks() {
  170  
  171: 		$plugin_public = new Header_Jumper_Public( $this->get_header_jumper(), $this->get_version() );
  172  
  173  		$this->loader->add_action( 'wp_enqueue_scripts', $plugin_public, 'enqueue_styles' );
  ...
  192  	 * @return    string    The name of the plugin.
  193  	 */
  194: 	public function get_header_jumper() {
  195: 		return $this->header_jumper;
  196  	}
  197  
  ...
  200  	 *
  201  	 * @since     1.0.0
  202: 	 * @return    Header_Jumper_Loader    Orchestrates the hooks of the plugin.
  203  	 */
  204  	public function get_loader() {

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/public/class-header-jumper-public.php:
    7   * @since      1.0.0
    8   *
    9:  * @package    Header_Jumper
   10:  * @subpackage Header_Jumper/public
   11   */
   12  
   ..
   17   * enqueue the public-facing stylesheet and JavaScript.
   18   *
   19:  * @package    Header_Jumper
   20:  * @subpackage Header_Jumper/public
   21   * @author     Your Name <email@example.com>
   22   */
   23: class Header_Jumper_Public {
   24  
   25  	/**
   ..
   28  	 * @since    1.0.0
   29  	 * @access   private
   30: 	 * @var      string    $header_jumper    The ID of this plugin.
   31  	 */
   32: 	private $header_jumper;
   33  
   34  	/**
   ..
   45  	 *
   46  	 * @since    1.0.0
   47: 	 * @param      string    $header_jumper       The name of the plugin.
   48  	 * @param      string    $version    The version of this plugin.
   49  	 */
   50: 	public function __construct( $header_jumper, $version ) {
   51  
   52: 		$this->header_jumper = $header_jumper;
   53  		$this->version = $version;
   54  
   ..
   66  		 *
   67  		 * An instance of this class should be passed to the run() function
   68: 		 * defined in Header_Jumper_Loader as all of the hooks are defined
   69  		 * in that particular class.
   70  		 *
   71: 		 * The Header_Jumper_Loader will then create the relationship
   72  		 * between the defined hooks and the functions defined in this
   73  		 * class.
   74  		 */
   75  
   76: 		wp_enqueue_style( $this->header_jumper, plugin_dir_url( __FILE__ ) . 'css/header-jumper-public.css', array(), $this->version, 'all' );
   77  
   78  	}
   ..
   89  		 *
   90  		 * An instance of this class should be passed to the run() function
   91: 		 * defined in Header_Jumper_Loader as all of the hooks are defined
   92  		 * in that particular class.
   93  		 *
   94: 		 * The Header_Jumper_Loader will then create the relationship
   95  		 * between the defined hooks and the functions defined in this
   96  		 * class.
   97  		 */
   98  
   99: 		wp_enqueue_script( $this->header_jumper, plugin_dir_url( __FILE__ ) . 'js/header-jumper-public.js', array( 'jquery' ), $this->version, false );
  100  
  101  	}

/Library/WebServer/Documents/blog/wp-content/plugins/header-jumper/public/partials/header-jumper-public-display.php:
    9   * @since      1.0.0
   10   *
   11:  * @package    Header_Jumper
   12:  * @subpackage Header_Jumper/public/partials
   13   */
   14  ?>

100 matches across 13 files
